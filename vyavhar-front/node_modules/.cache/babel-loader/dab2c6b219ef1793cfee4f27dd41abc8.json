{"ast":null,"code":"const AuthReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_START\":\n      return {\n        user: null,\n        isFetching: true,\n        error: false\n      };\n\n    case \"LOGIN_SUCCESS\":\n      return {\n        user: action.payload,\n        isFetching: false,\n        error: false\n      };\n\n    case \"LOGIN_FAILURE\":\n      return {\n        user: null,\n        isFetching: false,\n        error: true\n      };\n\n    case \"FOLLOW\":\n      return { ...state,\n        user: { ...state.user,\n          following: [...state.user.following, action.payload]\n        }\n      };\n\n    case \"UNFOLLOW\":\n      return { ...state,\n        user: { ...state.user,\n          following: state.user.following.filter(following => following !== action.payload)\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = AuthReducer;\nexport default AuthReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthReducer\");","map":{"version":3,"sources":["/media/utkarsh/Utkarsh/Utkarsh/Utkarsh's docs/My work/JS/MERN/vyavhar/vyavhar-front/src/context/AuthReducer.js"],"names":["AuthReducer","state","action","type","user","isFetching","error","payload","following","filter"],"mappings":"AAEA,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO;AACLC,QAAAA,IAAI,EAAE,IADD;AAELC,QAAAA,UAAU,EAAE,IAFP;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAK,eAAL;AACE,aAAO;AACLF,QAAAA,IAAI,EAAEF,MAAM,CAACK,OADR;AAELF,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAK,eAAL;AACE,aAAO;AACLF,QAAAA,IAAI,EAAE,IADD;AAELC,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAK,QAAL;AACE,aAAO,EACL,GAAGL,KADE;AAELG,QAAAA,IAAI,EAAE,EACJ,GAAGH,KAAK,CAACG,IADL;AAEJI,UAAAA,SAAS,EAAE,CAAC,GAAGP,KAAK,CAACG,IAAN,CAAWI,SAAf,EAA0BN,MAAM,CAACK,OAAjC;AAFP;AAFD,OAAP;;AAOF,SAAK,UAAL;AACE,aAAO,EACL,GAAGN,KADE;AAELG,QAAAA,IAAI,EAAE,EACJ,GAAGH,KAAK,CAACG,IADL;AAEJI,UAAAA,SAAS,EAAEP,KAAK,CAACG,IAAN,CAAWI,SAAX,CAAqBC,MAArB,CACRD,SAAD,IAAeA,SAAS,KAAKN,MAAM,CAACK,OAD3B;AAFP;AAFD,OAAP;;AASF;AACE,aAAON,KAAP;AAtCJ;AAwCD,CAzCD;;KAAMD,W;AA2CN,eAAeA,WAAf","sourcesContent":["\n\nconst AuthReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_START\":\n      return {\n        user: null,\n        isFetching: true,\n        error: false,\n      };\n    case \"LOGIN_SUCCESS\":\n      return {\n        user: action.payload,\n        isFetching: false,\n        error: false,\n      };\n    case \"LOGIN_FAILURE\":\n      return {\n        user: null,\n        isFetching: false,\n        error: true,\n      };\n    case \"FOLLOW\":\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          following: [...state.user.following, action.payload],\n        },\n      };\n    case \"UNFOLLOW\":\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          following: state.user.following.filter(\n            (following) => following !== action.payload\n          ),\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default AuthReducer;"]},"metadata":{},"sourceType":"module"}